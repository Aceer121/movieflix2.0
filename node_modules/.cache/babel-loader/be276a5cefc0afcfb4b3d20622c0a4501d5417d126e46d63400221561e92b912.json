{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arcel\\\\movieflix2.0\\\\src\\\\components\\\\MovieList.js\";\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  movies = []\n}) => {\n  console.log('Rendering MovieList with movies:', movies); // Debug log to check if movies is received\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /Render LOGIC/\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n  if (movies.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No movies available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this); // Temporary message for debugging\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      movie: movie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["MovieCard","jsxDEV","_jsxDEV","MovieList","movies","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","movie","id","_c","$RefreshReg$"],"sources":["C:/Users/Arcel/movieflix2.0/src/components/MovieList.js"],"sourcesContent":["import MovieCard from './MovieCard';\r\n\r\nconst MovieList = ({ movies =[] }) => {\r\n  console.log('Rendering MovieList with movies:', movies); // Debug log to check if movies is received\r\n  return <div>{/Render LOGIC/}</div>\r\n\r\n  if (movies.length === 0) {\r\n    return <div>No movies available</div>; // Temporary message for debugging\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies.map(movie => (\r\n        <MovieCard key={movie.id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default MovieList;\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM,GAAE;AAAG,CAAC,KAAK;EACpCC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,MAAM,CAAC,CAAC,CAAC;EACzD,oBAAOF,OAAA;IAAAK,QAAA,EAAM;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAElC,IAAIP,MAAM,CAACQ,MAAM,KAAK,CAAC,EAAE;IACvB,oBAAOV,OAAA;MAAAK,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACzC;EAGA,oBACET,OAAA;IAAKW,SAAS,EAAC,YAAY;IAAAN,QAAA,EACxBH,MAAM,CAACU,GAAG,CAACC,KAAK,iBACfb,OAAA,CAACF,SAAS;MAAgBe,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACM,EAAA,GAhBId,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}